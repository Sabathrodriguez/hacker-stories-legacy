{"ast":null,"code":"var _jsxFileName = \"/Users/sabathrodriguez/Projects/hacker-stories/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [searchTerm, setSearchTerm] = useSemiPersistentState('search', 'React');\n  React.useEffect(() => {\n    localStorage.setItem('search', searchTerm);\n  }, [searchTerm]); //A\n\n  const handleSearch = event => {\n    //C\n    setSearchTerm(event.target.value);\n  };\n\n  const searchedStories = stories.filter(story => {\n    return story.title.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"My hacker stories\"), /*#__PURE__*/React.createElement(InputWithLabel, {\n    id: \"search\",\n    value: searchTerm,\n    isFocused: true,\n    onInputChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SimpleTextComponent, {\n    yourText: \"Search:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    list: searchedStories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst InputWithLabel = ({\n  id,\n  value,\n  type = \"text\",\n  onInputChange,\n  isFocused,\n  children\n}) => {\n  //A\n  const inputRef = React.useRef(); //C \n\n  React.useEffect(() => {\n    if (isFocused && inputRef.current) {\n      //D\n      inputRef.current.focus();\n    }\n  }, [isFocused]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, children), \" \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    id: id,\n    type: type,\n    value: value,\n    autoFocus: isFocused,\n    onChange: onInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst List = ({\n  list\n}) => list.map(item => /*#__PURE__*/React.createElement(Item, {\n  key: item.objectID,\n  item: item,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }\n}));\n\nconst Item = ({\n  item\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: item.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, item.title)), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, item.author), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, item.num_comments), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, item.points));\n};\n\nconst SimpleTextComponent = ({\n  yourText\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, yourText);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sabathrodriguez/Projects/hacker-stories/src/App.js"],"names":["React","App","searchTerm","setSearchTerm","useSemiPersistentState","useEffect","localStorage","setItem","handleSearch","event","target","value","searchedStories","stories","filter","story","title","toLowerCase","includes","InputWithLabel","id","type","onInputChange","isFocused","children","inputRef","useRef","current","focus","List","list","map","item","objectID","Item","url","author","num_comments","points","SimpleTextComponent","yourText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst App = () => {\n\n  const [searchTerm, setSearchTerm] = useSemiPersistentState('search', 'React');\n\n  React.useEffect(() => {\n    localStorage.setItem('search', searchTerm);\n  }, [searchTerm]);\n\n  //A\n  const handleSearch = event => {\n    //C\n    setSearchTerm(event.target.value);\n  };\n\n  const searchedStories = stories.filter(story => {\n    return (\n      story.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  });\n\n  return (\n    <div>\n      <h1>My hacker stories</h1>\n\n      <InputWithLabel id=\"search\" value={searchTerm} isFocused onInputChange={handleSearch}>\n        <strong><SimpleTextComponent yourText=\"Search:\"/></strong>\n      </InputWithLabel>\n\n      <hr/>\n      <List list={searchedStories}/>\n    </div>\n  ); \n};\n\nconst InputWithLabel = ({id, value, type=\"text\", onInputChange, isFocused, children}) => {\n\n  //A\n  const inputRef = React.useRef();\n\n  //C \n  React.useEffect(() => {\n    if (isFocused && inputRef.current) {\n      //D\n      inputRef.current.focus();\n    }\n  }, [isFocused]);\n\n  return (\n    <>\n      <label htmlFor={id}>{children}</label> &nbsp;\n      {/* B */}\n      <input ref={inputRef} id={id} type={type} value={value} autoFocus={isFocused} onChange={onInputChange}/>\n    </>\n  );\n}\n\nconst List = ({ list }) => (\n    list.map(item => (\n      <Item key={item.objectID} item={item} />\n  ))\n);\n\nconst Item = ({ item }) => {\n  return (\n    <div>\n      <span><a href={item.url}>{item.title}</a></span>\n      <span>{item.author}</span>\n      <span>{item.num_comments}</span>\n      <span>{item.points}</span>\n    </div>\n  )\n}\n\nconst SimpleTextComponent = ({yourText}) => {\n  return (\n    <>\n      {yourText}\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}